<Window x:Class="ModifieurFermette.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModifieurFermette"
        mc:Ignorable="d"
        Title="Tableau de bord" Height="600" Width="800" MinHeight="400" MinWidth="600"

        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <!-- On s'assure que le DialogHost a une auteur définie qui prend toute la pace sur l'écran en bindant sa hauteur à celle de la fenêtre -->
    <materialDesign:DialogHost Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}">
        <Grid Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Menu de navigation -->
            <!-- TODO : Ajouter les commandes nécessaires aux items -->
            <Menu IsMainMenu="True"  Grid.Row="0"
                      Background="{DynamicResource PrimaryHueDarkBrush}" 
                      Foreground="White">
                <MenuItem Header="App">
                    <MenuItem Header="Ouvrir l'afficheur">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="OpenInNew" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Fermer l'application">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ExitToApp"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Ajouter">
                    <MenuItem Header="Evenement">
                        <MenuItem Header="Nouvel événement"></MenuItem>
                        <MenuItem Header="Nouveau titre"></MenuItem>
                        <MenuItem Header="Nouveau lieu"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Personne">
                        <MenuItem Header="Nouvelle personne"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="Menu">
                        <MenuItem Header="Nouveau menu" Command="{Binding AddShowViewMenuDuJourCmd}"></MenuItem>
                        <MenuItem Header="Nouveau plat"></MenuItem>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <!-- Expander 1 => Evenements et Personnes -->
            <Expander Grid.Row="1"
                        HorizontalAlignment="Stretch"
                        Header="Evenements" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <!-- Datagrid événements -->
                    <DataGrid x:Name="DGevenements" MaxHeight="300"
                            Margin="0 8 0 0" Grid.Row="0"
                            ItemsSource="{Binding EvenementsAff}"
                            CanUserSortColumns="True"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            CanUserResizeColumns="False"    
                            IsReadOnly="True"
                            AutoGenerateColumns="False"
                            materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                            materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <!-- Permet de lier la sélection de la checkbox avec celle de la ligne de la DataGrid -->
                        <DataGrid.Resources>
                            <Style TargetType="DataGridRow">
                                <Setter Property="IsSelected"
                                    Value="{Binding IsSelected, Mode=TwoWay}" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn 
                                Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" Width="Auto" IsReadOnly="False">
                                <DataGridCheckBoxColumn.Header>
                                    <!--padding to allow hit test to pass thru for sorting -->
                                    <Border
                                        Background="Transparent"
                                        Padding="6 0 6 0"
                                        HorizontalAlignment="Center">
                                        <CheckBox
                                            HorizontalAlignment="Center"
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                            IsChecked="{Binding IsAllItemsEvenementsSelected}" />
                                    </Border>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn
                                Binding="{Binding ID}"
                                Header="ID"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" Width="Auto"/>
                            <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Titre}"
                                Header="Titre"
                                MaxLength="50"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <!-- set a max length to get an indicator in the editor -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Lieu}"
                                Header="Lieu"
                                MaxLength="100"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding TypeEvenement}"
                                Header="Type"
                                MaxLength="15"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding DateDebut}"
                                Header="Début"
                                MaxLength="22"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding DateFin}"
                                Header="Fin"
                                MaxLength="22"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!-- Boutons événements -->
                    <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="0">
                            Ajouter
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="2">
                            Modifier
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="4"
                            Command="{Binding DeleteShowViewEvenementCmd}">
                            Supprimer
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="6">
                            Détails
                        </Button>
                    </Grid>
                </Grid>
            </Expander>

            <!-- Expander 2 => Personnes-->
            <Expander Grid.Row="2"
                        HorizontalAlignment="Stretch"
                        Header="Personnes" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <!-- Datagrid Personnes -->
                    <DataGrid x:Name="dgpersonnes" MaxHeight="300"
                            Margin="0 8 0 0" Grid.Row="0"
                            ItemsSource="{Binding PersonnesAff}"
                            CanUserSortColumns="True"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            CanUserResizeColumns="False"
                            IsReadOnly="True"
                            AutoGenerateColumns="False"
                            materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                            materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <!-- Permet de lier la sélection de la checkbox avec celle de la ligne de la DataGrid -->
                        <DataGrid.Resources>
                            <Style TargetType="DataGridRow">
                                <Setter Property="IsSelected"
                                Value="{Binding IsSelected, Mode=TwoWay}" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                                Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" Width="Auto" IsReadOnly="False">
                                <DataGridCheckBoxColumn.Header>
                                    <!--padding to allow hit test to pass thru for sorting -->
                                    <Border
                                        Background="Transparent"
                                        Padding="6 0 6 0"
                                        HorizontalAlignment="Center">
                                        <CheckBox
                                            HorizontalAlignment="Center"
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                            IsChecked="{Binding IsAllItemsPersonnesSelected}" />
                                    </Border>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn
                                Binding="{Binding ID}"
                                Header="ID"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" Width="Auto"/>
                            <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Nom}"
                                Header="Nom"
                                MaxLength="50"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <!-- set a max length to get an indicator in the editor -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Prenom}"
                                Header="Prénom"
                                MaxLength="50"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding DateNaissance}"
                                Header="Naissance"
                                MaxLength="10"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Role}"
                                Header="Rôle"
                                MaxLength="12"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!-- Boutons Personnes -->
                    <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="0">
                            Ajouter
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="2">
                            Modifier
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="4"
                            Command="{Binding DeleteShowPersonneCmd}">
                            Supprimer
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="6">
                            Détails
                        </Button>
                    </Grid>
                </Grid>
            </Expander>

            <!-- Expander 3 => menus-->
            <Expander x:Name="ExpMenus" Grid.Row="3"
                      HorizontalAlignment="Stretch"
                      Header="Menus">
                <!-- Menus -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- Datagrid menus -->
                    <DataGrid x:Name="DGmenus" MaxHeight="300"
                             Margin="0 8 0 0" Grid.Row="0"
                             ScrollViewer.CanContentScroll="True" 
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ItemsSource="{Binding MenusAff}"
                             CanUserSortColumns="True"
                             CanUserAddRows="False"
                             CanUserDeleteRows="False"
                             CanUserResizeColumns="False"
                             IsReadOnly="True"
                             AutoGenerateColumns="False"
                             materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                             materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             SelectionMode="Extended">
                        <!-- Permet de lier la sélection de la checkbox avec celle de la ligne de la DataGrid -->
                        <DataGrid.Resources>
                            <Style TargetType="DataGridRow">
                                <Setter Property="IsSelected"
                                Value="{Binding IsSelected, Mode=TwoWay}" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn x:Name="CBitemMenus"
                                Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" Width="Auto"  IsReadOnly="False">
                                <DataGridCheckBoxColumn.Header>
                                    <!--padding to allow hit test to pass thru for sorting -->
                                    <Border
                                        Background="Transparent"
                                        Padding="6 0 6 0"
                                        HorizontalAlignment="Center">
                                        <CheckBox x:Name="CBallMenus"
                                            HorizontalAlignment="Center"
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                            IsChecked="{Binding IsAllItemsMenuDuJourSelected, Mode=TwoWay}" />
                                    </Border>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn
                                Binding="{Binding ID}"
                                Header="ID"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" Width="Auto"/>
                            <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding Date}"
                                Header="Date"
                                MaxLength="10"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="Auto"/>
                            <!-- set a max length to get an indicator in the editor -->
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding eNom}"
                                Header="Potage"
                                MaxLength="50"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding pNom}"
                                Header="Plat principal"
                                MaxLength="15"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                            <materialDesign:MaterialDataGridTextColumn
                                Binding="{Binding dNom}"
                                Header="Dessert"
                                MaxLength="10"
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!-- Boutons menus -->
                    <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="0"
                            Command="{Binding AddShowViewMenuDuJourCmd}">
                            Ajouter
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="2">
                            Modifier
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="4"
                            Command="{Binding DeleteShowViewMenuDuJourCmd}">
                            Supprimer
                        </Button>
                        <Button
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Width="100"
                            ToolTip="Resource name: MaterialDesignRaisedButton"
                            Margin="5"
                            Grid.Column="6">
                            Détails
                        </Button>
                    </Grid>
                </Grid>
            </Expander>
        </Grid>
    </materialDesign:DialogHost>
</Window>
